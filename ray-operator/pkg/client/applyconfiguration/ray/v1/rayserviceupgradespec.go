// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/ray-project/kuberay/ray-operator/apis/ray/v1"
)

// RayServiceUpgradeSpecApplyConfiguration represents an declarative configuration of the RayServiceUpgradeSpec type for use
// with apply.
type RayServiceUpgradeSpecApplyConfiguration struct {
	Type *v1.RayServiceUpgradeStrategy `json:"type,omitempty"`
}

// RayServiceUpgradeSpecApplyConfiguration constructs an declarative configuration of the RayServiceUpgradeSpec type for use with
// apply.
func RayServiceUpgradeSpec() *RayServiceUpgradeSpecApplyConfiguration {
	return &RayServiceUpgradeSpecApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *RayServiceUpgradeSpecApplyConfiguration) WithType(value v1.RayServiceUpgradeStrategy) *RayServiceUpgradeSpecApplyConfiguration {
	b.Type = &value
	return b
}
