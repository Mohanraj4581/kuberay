// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ray-project/kuberay/ray-operator/controllers/ray (interfaces: RayClusterMetricsCollector)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRayClusterMetricsCollector is a mock of RayClusterMetricsCollector interface.
type MockRayClusterMetricsCollector struct {
	ctrl     *gomock.Controller
	recorder *MockRayClusterMetricsCollectorMockRecorder
}

// MockRayClusterMetricsCollectorMockRecorder is the mock recorder for MockRayClusterMetricsCollector.
type MockRayClusterMetricsCollectorMockRecorder struct {
	mock *MockRayClusterMetricsCollector
}

// NewMockRayClusterMetricsCollector creates a new mock instance.
func NewMockRayClusterMetricsCollector(ctrl *gomock.Controller) *MockRayClusterMetricsCollector {
	mock := &MockRayClusterMetricsCollector{ctrl: ctrl}
	mock.recorder = &MockRayClusterMetricsCollectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRayClusterMetricsCollector) EXPECT() *MockRayClusterMetricsCollectorMockRecorder {
	return m.recorder
}

// ObserveRayClusterHeadPodReadyDuration mocks base method.
func (m *MockRayClusterMetricsCollector) ObserveRayClusterHeadPodReadyDuration(arg0, arg1 string, arg2 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ObserveRayClusterHeadPodReadyDuration", arg0, arg1, arg2)
}

// ObserveRayClusterHeadPodReadyDuration indicates an expected call of ObserveRayClusterHeadPodReadyDuration.
func (mr *MockRayClusterMetricsCollectorMockRecorder) ObserveRayClusterHeadPodReadyDuration(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObserveRayClusterHeadPodReadyDuration", reflect.TypeOf((*MockRayClusterMetricsCollector)(nil).ObserveRayClusterHeadPodReadyDuration), arg0, arg1, arg2)
}

// ObserveRayClusterProvisionedDuration mocks base method.
func (m *MockRayClusterMetricsCollector) ObserveRayClusterProvisionedDuration(arg0, arg1 string, arg2 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ObserveRayClusterProvisionedDuration", arg0, arg1, arg2)
}

// ObserveRayClusterProvisionedDuration indicates an expected call of ObserveRayClusterProvisionedDuration.
func (mr *MockRayClusterMetricsCollectorMockRecorder) ObserveRayClusterProvisionedDuration(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObserveRayClusterProvisionedDuration", reflect.TypeOf((*MockRayClusterMetricsCollector)(nil).ObserveRayClusterProvisionedDuration), arg0, arg1, arg2)
}
