apiVersion: ray.io/v1alpha1
kind: RayCluster
metadata:
  name: raycluster-full
spec:
  rayVersion: '1.3.0'
  headNodeSpec:
    params:
      port: '6379'
      object-manager-port: '12345'
      node-manager-port: '12346'
      object-store-memory: '100000000'
      redis-password: 'LetMeInRay'
      dashboard-host: '0.0.0.0'
      num-cpus: '1'
      node-ip-address: $MY_POD_IP
    template:
      spec:
        containers:
        - name: ray-head
          image: rayproject/ray:latest
          env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          ports:
          - containerPort: 6379
            name: redis
          - containerPort: 10001
            name: head
          - containerPort: 8265
            name: dashboard
  workerNodeSpec:
  - groupName: cpu-group
    replicas: 1
    minReplicas: 1
    maxReplicas: 10
    params:
      redis-password: 'AwesomeRay'
      node-ip-address: $MY_POD_IP
    template:
      spec:
        initContainers:
        - name: init-myservice
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup $RAY_HEAD_SERVICE_IP.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]
        containers:
        - name: ray-worker
          image: rayproject/ray:latest
          env:
          - name:  RAY_DISABLE_DOCKER_CPU_WARNING
            value: "1"
          - name: TYPE
            value: "worker"
          - name: CPU_REQUEST
            valueFrom:
              resourceFieldRef:
                containerName: ray-worker
                resource: requests.cpu
          - name: CPU_LIMITS
            valueFrom:
              resourceFieldRef:
                containerName: ray-worker
                resource: limits.cpu
          - name: MEMORY_LIMITS
            valueFrom:
              resourceFieldRef:
                containerName: ray-worker
                resource: limits.memory
          - name: MEMORY_REQUESTS
            valueFrom:
              resourceFieldRef:
                containerName: ray-worker
                resource: requests.memory
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          ports:
          - containerPort: 80
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","ray stop"]
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "500m"
              memory: "256Mi"
