apiVersion: ray.io/v1alpha1
kind: RayCluster
metadata:
  labels:
{{ include "ray-cluster.labels" . | indent 4 }}
  name: {{ include "ray-cluster.fullname" . }}
spec:
  rayVersion: {{ .Values.ray.version }}
  enableInTreeAutoscaling: {{ .Values.ray.autoscaler.inTree }}
  headGroupSpec:
    serviceType: ClusterIP
    # the pod replicas in this group typed head (assuming there could be more than 1 in the future)
    replicas: {{ .Values.ray.head.replicas }}
    rayStartParams:
      {{- if .Values.ray.autoscaler.inTree }}
        no-monitor: "true"
      {{- else }}
        no-monitor: "false"
      {{- end }}
      {{- range $key, $val := .Values.ray.head.initArgs }}
        {{ $key }}: {{ $val | quote }}
      {{- end }}
    template:
      metadata:
        {{- if .Values.ray.head.annotations }}
        annotations: {{- toYaml .Values.ray.head.annotations | nindent 10 }}
        {{- end }}
        labels:
          # custom labels. NOTE: do not define custom labels start with `raycluster.`, they may be used in controller.
          # Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
          groupName: {{ .Values.ray.head.groupName }}
          rayNodeType: {{ .Values.ray.head.type }}
          rayCluster: {{ include "ray-cluster.fullname" . }}
          {{- include "ray-cluster.labels" . | nindent 10 }}
          {{- if .Values.ray.head.labels }}
          {{- toYaml .Values.ray.head.labels | nindent 10 }}
          {{- end }}
      spec:
        {{- if not .Values.ray.autoscaler.inTree }}
        # This is needed to give the autoscaler side car permissions to query and update
        # definitions in the Kubernetes API server (see kuberay-autoscaler-rbac.yaml)
        serviceAccountName: autoscaler-sa
        {{- end }}
        {{- if .Values.imagePullSecrets }}
        imagePullSecrets: {{- toYaml .Values.imagePullSecrets | nindent 10 }}
        {{- end }}
        containers:
          - name: ray-head
            image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            resources: {{- toYaml .Values.ray.head.resources | nindent 14 }}
            env:
              {{- include "{{ .Chart.Name }}.head.env" . | indent 14 }}
            ports:
              {{- toYaml .Values.ray.head.ports | nindent 14 }}
            lifecycle:
              preStop:
                exec:
                  command: ["/bin/sh","-c","ray stop"]
            volumeMounts: {{- toYaml .Values.ray.head.volumeMounts | nindent 14 }}
         {{- if not .Values.ray.autoscaler.inTree }}
         {{- include "{{ .Chart.Name }}.head.autoscaler" . | nindent 10 }}
         {{- end }}
        {{- if .Values.ray.head.volumes }}
        volumes: {{- toYaml .Values.ray.head.volumes | nindent 10 }}
        {{- end }}
        {{- if .Values.ray.head.affinity }}
        affinity: {{- toYaml .Values.ray.head.affinity | nindent 10 }}
        {{- end }}
        {{- if .Values.ray.head.tolerations }}
        tolerations: {{- toYaml .Values.ray.head.tolerations | nindent 10 }}
        {{- end }}
        {{- if .Values.ray.head.nodeSelector }}
        nodeSelector: {{- toYaml .Values.ray.head.nodeSelector | nindent 10 }}
        {{- end }}

  workerGroupSpecs:
    # the pod replicas in this group typed worker
    {{- include "{{ .Chart.Name }}.worker.group" . | indent 4 -}}
